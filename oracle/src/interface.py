
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from function_interface import *


ASSETS_PATH = Path(r"./assets/frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1074x527")
window.configure(bg = "#000000")


canvas = Canvas(
    window,
    bg = "#000000",
    height = 527,
    width = 1074,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_image_1_select = PhotoImage(
    file=relative_to_assets("button_9.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_1,button_image_1,button_image_1_select),
    relief="flat",
    text=False
)
button_1.place(
    x=280.00067138671875,
    y=393.0,
    width=188.00006103515625,
    height=33.0
)


button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_image_2_select = PhotoImage(
    file=relative_to_assets("button_10.png"))

button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_2,button_image_2,button_image_2_select),
    relief="flat",
    text=False
)
button_2.place(
    x=280.00067138671875,
    y=334.0,
    width=188.00006103515625,
    height=33.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_image_3_select = PhotoImage(
    file=relative_to_assets("button_11.png"))

button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_3,button_image_3,button_image_3_select),
    relief="flat",
    text=False
)
button_3.place(
    x=280.00067138671875,
    y=275.0,
    width=188.00006103515625,
    height=33.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_image_4_select = PhotoImage(
    file=relative_to_assets("button_12.png"))

button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_4,button_image_4,button_image_4_select),
    relief="flat",
    text=False
)
button_4.place(
    x=280.00067138671875,
    y=190.0,
    width=188.00006103515625,
    height=33.0
)

button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_image_5_select = PhotoImage(
    file=relative_to_assets("button_13.png"))

button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_5,button_image_5,button_image_5_select),
    relief="flat",
    text=False
)
button_5.place(
    x=69.00067138671875,
    y=393.0,
    width=188.0,
    height=33.0
)

button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_image_6_select = PhotoImage(
    file=relative_to_assets("button_14.png"))

button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_6,button_image_6,button_image_6_select),
    relief="flat",
    text=False
)
button_6.place(
    x=69.00067138671875,
    y=334.0,
    width=188.0,
    height=33.0
)

button_image_7 = PhotoImage(
    file=relative_to_assets("button_7.png"))
button_image_7_select = PhotoImage(
    file=relative_to_assets("button_15.png"))

button_7 = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_7,button_image_7,button_image_7_select),
    relief="flat",
    text=False
)
button_7.place(
    x=69.00067138671875,
    y=275.0,
    width=188.0,
    height=33.0
)

button_image_8 = PhotoImage(
    file=relative_to_assets("button_8.png"))
button_image_8_select = PhotoImage(
    file=relative_to_assets("button_16.png"))

button_8 = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_8,button_image_8,button_image_8_select),
    relief="flat",
    text=False
)
button_8.place(
    x=69.00067138671875,
    y=225.0,
    width=188.0,
    height=33.0
)

button_image_19 = PhotoImage(
    file=relative_to_assets("button_19.png"))
button_image_19_select = PhotoImage(
    file=relative_to_assets("button_18.png"))

button_19 = Button(
    image=button_image_19,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_19,button_image_19,button_image_19_select),
    relief="flat",
    text=False
)
button_19.place(
    x=280.00067138671875,
    y=450.0,
    width=188.0,
    height=33.0
)

button_image_20 = PhotoImage(
    file=relative_to_assets("button_20.png"))
button_image_20_select = PhotoImage(
    file=relative_to_assets("button_21.png"))

button_20 = Button(
    image=button_image_20,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_20,button_image_20,button_image_20_select),
    relief="flat",
    text=False
)
button_20.place(
    x=69.00067138671875,
    y=190.0,
    width=188.0,
    height=33.0
)

button_image_22 = PhotoImage(
    file=relative_to_assets("button_22.png"))
button_image_22_select = PhotoImage(
    file=relative_to_assets("button_23.png"))

button_22 = Button(
    image=button_image_22,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: change_color_button(button_22,button_image_22,button_image_22_select),
    relief="flat",
    text=False
)
button_22.place(
    x=280.00067138671875,
    y=226.0,
    width=188.0,
    height=33.0
)

button_image_17 = PhotoImage(
    file=relative_to_assets("button_17.png"))
button_17 = Button(
    image=button_image_17,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: begin(),
    relief="flat"
)


def getEntry():
    val = entry_1.get()
    return val


entry_1 = Entry()
entry_1.place(
    x=659.000732421875,
    y=212.0,
    width=345.0,
    height=41.0
)

def begin():
    
    to_affiche = []
    val = getEntry()
    if(val):
        human = val
    else:
        human = ""
    to_affiche = calculate_begin(tab_buttons, human)
    canvas.delete("suivant")
    canvas.create_text(
        760,
        450.0,
        anchor="nw",
        text='',
        fill="#38B6FF",
        font=("Junge Regular", 26 * -1),
        tag="attendu"
    )
        #PREDICT
            
    print("MERSENNE TWISTER")
    canvas.delete("mersenne")
    canvas.create_text(
        500.0,
        188.0,
        anchor="nw",
        text='',
        fill="#38B6FF",
        font=("Junge Regular", 26 * -1),
        tag="mersenne"
    )

    print("MvsM")
    canvas.delete("mvsm")
    canvas.create_text(
        500.0,
        232.0,
        anchor="nw",
        text='',
        fill="#38B6FF",
        font=("Junge Regular", 26 * -1),
        tag="mvsm"
    )

    print("MSM")
    canvas.delete("msm")
    canvas.create_text(
        500.0,
        280.0,
        anchor="nw",
        text='',
        fill="#38B6FF",
        font=("Junge Regular", 26 * -1),
        tag="msm",
    )

    print("LCG")
    canvas.delete("lcg")
    canvas.create_text(
        500.0,
        340.0,
        anchor="nw",
        text='',
        fill="#38B6FF",
        font=("Junge Regular", 26 * -1),
        tag="lcg"
    )
    
    print("MWCSS")
    canvas.delete("mwcss")
    canvas.create_text(
        500.0,
        400.0,
        anchor="nw",
        text='',
        fill="#38B6FF",
        font=("Junge Regular", 26 * -1),
        tag="mwcss"
    )  

    print("KNN")  
    canvas.delete("knn")
    canvas.create_text(
        500.0,
        450.0,
        anchor="nw",
        text='',
        fill="#38B6FF",
        font=("Junge Regular", 26 * -1),
        tag="knn"
    ) 
    for predicteur in to_affiche:
        ##ATTENDU
        canvas.delete("attendu")
        canvas.create_text(
            760,
            450.0,
            anchor="nw",
            text=predicteur.getLastNumberSequence(),
            fill="#38B6FF",
            font=("Junge Regular", 26 * -1),
            tag="attendu"
        )
        match(predicteur.getName()):
            #PREDICT
            case "MersenneTwister":
                print("MERSENNE TWISTER")
                canvas.delete("mersenne")
                canvas.create_text(
                    500.0,
                    188.0,
                    anchor="nw",
                    text=predicteur.getNextNumberPredicted(),
                    fill="#38B6FF",
                    font=("Junge Regular", 26 * -1),
                    tag="mersenne"
                )
            case "MvsM":
                print("MvsM")
                canvas.delete("mvsm")
                canvas.create_text(
                    500.0,
                    232.0,
                    anchor="nw",
                    text=predicteur.getNextNumberPredicted(),
                    fill="#38B6FF",
                    font=("Junge Regular", 26 * -1),
                    tag="mvsm"
                )
           
            case "MSM":
                print("MSM")
                canvas.delete("msm")
                canvas.create_text(
                    500.0,
                    280.0,
                    anchor="nw",
                    text=predicteur.getNextNumberPredicted(),
                    fill="#38B6FF",
                    font=("Junge Regular", 26 * -1),
                    tag="msm",
                )
            
            case "LCG":
                print("LCG")
                canvas.delete("lcg")
                canvas.create_text(
                    500.0,
                    340.0,
                    anchor="nw",
                    text=predicteur.getNextNumberPredicted(),
                    fill="#38B6FF",
                    font=("Junge Regular", 26 * -1),
                    tag="lcg"
                )
                
            case "MWCSS":
                print("MWCSS")
                canvas.delete("mwcss")
                canvas.create_text(
                    500.0,
                    400.0,
                    anchor="nw",
                    text=predicteur.getNextNumberPredicted(),
                    fill="#38B6FF",
                    font=("Junge Regular", 26 * -1),
                    tag="mwcss"
                )  
            
            case "KNN":
                print("KNN")  
                canvas.delete("knn")
                canvas.create_text(
                    500.0,
                    450.0,
                    anchor="nw",
                    text=predicteur.getNextNumberPredicted(),
                    fill="#38B6FF",
                    font=("Junge Regular", 26 * -1),
                    tag="knn"
                ) 
                       
button_17.place(
    x=753.000732421875,
    y=297.0,
    width=129.0,
    height=48.4000244140625
)

tab_buttons = [button_1,button_2,button_3,button_4,button_5,button_6,button_7,button_8, button_19, button_20, button_22]

#canva.delete('all')

canvas.create_text(
    280.00067138671875,
    158.0,
    anchor="nw",
    text="Choisir prédicteur(s)",
    fill="#38B6FF",
    font=("Junge Regular", 18 * -1),
)
canvas.create_text(
    80.0,
    158.0,
    anchor="nw",
    text="Choisir une source",
    fill="#38B6FF",
    font=("Junge Regular", 18 * -1)
)

canvas.create_text(
    659.000732421875,
    180.0,
    anchor="nw",
    text="Entrer une source de 0 et 1 (optionnel)",
    fill="#38B6FF",
    font=("Junge Regular", 18 * -1)
)
##############################
canvas.create_text(
    480.0,
    158.0,
    anchor="nw",
    text="Prédictions",
    fill="#38B6FF",
    font=("Junge Regular", 18 * -1)
)

#######################
#ATTENDU
canvas.create_text(
    800.000732421875,
    400.0,
    anchor="nw",
    text="Attendu",
    fill="#38B6FF",
    font=("Junge Regular", 26 * -1)
)

canvas.create_text(
    106.00067138671875,
    37.0,
    anchor="nw",
    text="WHO IS THE BEST PREDICTOR ?",
    fill="#38B6FF",
    font=("JuliusSansOne Regular", 36 * -1)
)
canvas.create_rectangle(
    63.0,
    105.5,
    834.0,
    112.5,
    fill="#3B37FF",
    outline="")

window.resizable(False, False)
window.mainloop()